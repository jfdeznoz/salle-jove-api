name: Deploy Infra (CDK)

on:
  push:
    branches: [ main ]
    paths:
      - "infra-ecs/**"
      - ".github/workflows/deploy-infra.yml"
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

concurrency:
  group: deploy-infra
  cancel-in-progress: false

env:
  AWS_REGION: eu-north-1
  STACK_NAME: SalleJovenFargate

  # === TUS VALORES (puedes moverlos a 'vars' o 'secrets' del repo/org) ===
  VPC_ID: vpc-09f408a62930f6f1d
  CERT_ARN: arn:aws:acm:eu-north-1:659925004462:certificate/23c87695-563f-4904-b380-a453435bbd24
  RDS_SG_ID: sg-08d1b1505131491f6
  ECR_REPO_NAME: sallejoven-api

  CONTAINER_PORT: "5000"
  HEALTH_PATH: /public/info
  USE_PUBLIC_SUBNETS: "true"

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra-ecs

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (20)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            infra-ecs/package-lock.json
            infra-ecs/package.json

      - name: Install deps
        run: npm ci

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::659925004462:role/github-cdk-deploy
          aws-region: ${{ env.AWS_REGION }}

      # Bootstrap SIN contextos (idempotente)
      - name: CDK bootstrap
        run: npx cdk bootstrap --require-approval never

      - name: CDK synth
        run: >
          npx cdk synth ${{ env.STACK_NAME }}
          -c vpcId=${{ env.VPC_ID }}
          -c certArn=${{ env.CERT_ARN }}
          -c rdsSgId=${{ env.RDS_SG_ID }}
          -c ecrRepoName=${{ env.ECR_REPO_NAME }}
          -c containerPort=${{ env.CONTAINER_PORT }}
          -c healthPath=${{ env.HEALTH_PATH }}
          -c usePublicSubnets=${{ env.USE_PUBLIC_SUBNETS }}

      - name: CDK deploy
        run: >
          npx cdk deploy ${{ env.STACK_NAME }}
          -c vpcId=${{ env.VPC_ID }}
          -c certArn=${{ env.CERT_ARN }}
          -c rdsSgId=${{ env.RDS_SG_ID }}
          -c ecrRepoName=${{ env.ECR_REPO_NAME }}
          -c containerPort=${{ env.CONTAINER_PORT }}
          -c healthPath=${{ env.HEALTH_PATH }}
          -c usePublicSubnets=${{ env.USE_PUBLIC_SUBNETS }}
          --require-approval never --progress events